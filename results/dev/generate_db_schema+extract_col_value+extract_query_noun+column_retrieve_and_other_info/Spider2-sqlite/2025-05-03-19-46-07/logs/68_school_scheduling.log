############################## Human at step generate_db_schema ##############################

/* Here is a examples about describe database */
    #Forigen keys: 
    Airlines.ORIGIN = Airports.Code, Airlines.DEST = Airports.Code, Airlines.OP_CARRIER_AIRLINE_ID = Air Carriers.Code
    #Database Description: The database encompasses information related to flights, including airlines, airports, and flight operations.
    #Tables Descriptions:
    Air Carriers: Codes and descriptive information about airlines
    Airports: IATA codes and descriptions of airports
    Airlines: Detailed information about flights 

    /* Here is a examples about describe database */
    #Forigen keys:
    data.ID = price.ID, production.ID = price.ID, production.ID = data.ID, production.country = country.origin
    #Database Description: The database contains information related to cars, including country, price, specifications, Production
    #Tables Descriptions:
    Country: Names of the countries where the cars originate from.
    Price: Price of the car in USD.
    Data: Information about the car's specifications
    Production: Information about car's production.

    /* Describe the following database */
    Database Management System: SQLite
#Database name: school_scheduling
## Table Buildings:
BuildingCode: The type is TEXT, Which does not inlude Null and is Unique. Values format like: ['LB', 'IB', 'GYM']
BuildingName: The type is TEXT, Which does not inlude Null and is Unique. Values format like: ['Library', 'Arts and Sciences', 'Technology Building']
NumberOfFloors: The type is INTEGER, Which does not inlude Null and is Non-Unique. Values format like: [3, 1, 2]
ElevatorAccess: The type is BOOLEAN, Which does not inlude Null and is Non-Unique. Value of this column must in: [1, 0]
SiteParkingAvailable: The type is BOOLEAN, Which does not inlude Null and is Non-Unique. Value of this column must in: [1, 0]

## Table Categories:
CategoryID: The type is TEXT, Which does not inlude Null and is Unique. Values format like: ['ENG', 'MAT', 'ACC']
CategoryDescription: The type is TEXT, Which does not inlude Null and is Unique. Values format like: ['History', 'French', 'Art']
DepartmentID: The type is INTEGER, Which does not inlude Null and is Non-Unique. Values format like: [4, 3, 5]

## Table Class_Rooms:
ClassRoomID: The type is INTEGER, Which does not inlude Null and is Unique. Values format like: [3315, 1622, 3415]
BuildingCode: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: ['CC', 'TB', 'LB']
PhoneAvailable: The type is BOOLEAN, Which does not inlude Null and is Non-Unique. Value of this column must in: [1, 0]

## Table Classes:
ClassID: The type is INTEGER, Which does not inlude Null and is Unique. Values format like: [6031, 1560, 5639]
SubjectID: The type is INTEGER, Which does not inlude Null and is Non-Unique. Values format like: [56, 12, 1]
ClassRoomID: The type is INTEGER, Which does not inlude Null and is Non-Unique. Values format like: [1641, 1142, 3343]
Credits: The type is INTEGER, Which does not inlude Null and is Non-Unique. Values format like: [3, 5, 2]
StartDate: The type is DATE, Which does not inlude Null and is Non-Unique. Values format like: ['2017-09-16', '2018-01-20', '2018-01-15']
StartTime: The type is TIME, Which does not inlude Null and is Non-Unique. Values format like: ['12:00:00', '10:00:00', '18:00:00']
Duration: The type is INTEGER, Which does not inlude Null and is Non-Unique. Values format like: [140, 280, 110]
MondaySchedule: The type is BOOLEAN, Which does not inlude Null and is Non-Unique. Value of this column must in: [0, 1]
TuesdaySchedule: The type is BOOLEAN, Which does not inlude Null and is Non-Unique. Value of this column must in: [1, 0]
WednesdaySchedule: The type is BOOLEAN, Which does not inlude Null and is Non-Unique. Value of this column must in: [1, 0]
ThursdaySchedule: The type is BOOLEAN, Which does not inlude Null and is Non-Unique. Value of this column must in: [1, 0]
FridaySchedule: The type is BOOLEAN, Which does not inlude Null and is Non-Unique. Value of this column must in: [1, 0]
SaturdaySchedule: The type is BOOLEAN, Which does not inlude Null and is Non-Unique. Value of this column must in: [1, 0]

## Table Departments:
DepartmentID: The type is INTEGER, Which does not inlude Null and is Unique. Values format like: [2, 4, 5]
DeptName: The type is TEXT, Which does not inlude Null and is Unique. Values format like: ['Business Administration', 'Sciences', 'Social Sciences']
DeptChair: The type is INTEGER, Which does not inlude Null and is Unique. Values format like: [98007, 98005, 98059]

## Table Faculty:
StaffID: The type is INTEGER, Which does not inlude Null and is Unique. Values format like: [98013, 98019, 98052]
Title: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: ['Instructor', 'Associate Professor', 'Professor']
Status: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: ['Full Time', 'Part Time', 'On Leave']
Tenured: The type is BOOLEAN, Which does not inlude Null and is Non-Unique. Value of this column must in: [1, 0]

## Table Faculty_Categories:
StaffID: The type is INTEGER, Which does not inlude Null and is Non-Unique. Values format like: [98020, 98030, 98062]
CategoryID: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: ['POL', 'HIS', 'CIS']

## Table Faculty_Classes:
ClassID: The type is INTEGER, Which does not inlude Null and is Unique. Values format like: [1006, 6090, 1030]
StaffID: The type is INTEGER, Which does not inlude Null and is Non-Unique. Values format like: [98064, 98048, 98025]

## Table Faculty_Subjects:
StaffID: The type is INTEGER, Which does not inlude Null and is Non-Unique. Values format like: [98063, 98062, 98010]
SubjectID: The type is INTEGER, Which does not inlude Null and is Non-Unique. Values format like: [1, 39, 19]
ProficiencyRating: The type is REAL, Which does not inlude Null and is Non-Unique. Values format like: [10, 9, 8]

## Table Majors:
MajorID: The type is INTEGER, Which does not inlude Null and is Unique. Values format like: [2, 6, 1]
Major: The type is TEXT, Which does not inlude Null and is Unique. Values format like: ['Accounting', 'Information Sciences', 'Music']

## Table Staff:
StaffID: The type is INTEGER, Which does not inlude Null and is Unique. Values format like: [98014, 98042, 98020]
StfFirstName: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: ['Katherine', 'Maria', 'Jim']
StfLastname: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: ['Hernandez', 'Wilson', 'Sergienko']
StfStreetAddress: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: ['672 Lamont Ave', '16 Maple Lane', '15127 NE 24th, #383']
StfCity: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: ['Kirkland', 'Marysville', 'Bellevue']
StfState: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: ['WA', 'CA', 'TX']
StfZipCode: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: [97208, 90809, 98125]
StfAreaCode: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: [425, 503, 915]
StfPhoneNumber: The type is TEXT, Which does not inlude Null and is Unique. Values format like: ['555-2531', '555-2491', '555-2611']
Salary: The type is REAL, Which does not inlude Null and is Non-Unique. Values format like: [44000, 49000, 35000]
DateHired: The type is DATE, Which does not inlude Null and is Unique. Values format like: ['1983-01-28', '1986-09-17', '1990-08-20']
Position: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: ['Graduate Advisor', 'Registrar', 'Secretary']

## Table Student_Class_Status:
ClassStatus: The type is INTEGER, Which does not inlude Null and is Unique. Values format like: [1, 2, 3]
ClassStatusDescription: The type is TEXT, Which does not inlude Null and is Unique. Values format like: ['Completed', 'Enrolled', 'Withdrew']

## Table Student_Schedules:
StudentID: The type is INTEGER, Which does not inlude Null and is Non-Unique. Values format like: [1016, 1009, 1003]
ClassID: The type is INTEGER, Which does not inlude Null and is Non-Unique. Values format like: [1162, 5071, 3085]
ClassStatus: The type is INTEGER, Which does not inlude Null and is Non-Unique. Values format like: [2, 1, 3]
Grade: The type is REAL, Which does not inlude Null and is Non-Unique. Values format like: [88, 97, 82]

## Table Students:
StudentID: The type is INTEGER, Which does not inlude Null and is Unique. Values format like: [1011, 1009, 1007]
StudFirstName: The type is TEXT, Which does not inlude Null and is Unique. Values format like: ['Richard', 'John', 'George']
StudLastName: The type is TEXT, Which does not inlude Null and is Unique. Values format like: ['Bonnicksen', 'Hamilton', 'Chavez']
StudStreetAddress: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: ['611 Alpine Drive', 'Route 2, Box 203B', '66 Spring Valley Drive']
StudCity: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: ['Palm Springs', 'Portland', 'Medford']
StudState: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: ['OR', 'CA', 'WA']
StudZipCode: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: [97401, 97501, 78284]
StudAreaCode: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: [541, 806, 206]
StudPhoneNumber: The type is TEXT, Which does not inlude Null and is Unique. Values format like: ['555-2716', '555-2296', '555-2696']
StudGPA: The type is REAL, Which does not inlude Null and is Unique. Values format like: [85, 77, 72]
StudMajor: The type is INTEGER, Which inlude Null and is Non-Unique. Values format like: [3, 5, 6]

## Table Subjects:
SubjectID: The type is INTEGER, Which does not inlude Null and is Unique. Values format like: [18, 22, 39]
CategoryID: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: ['BUS', 'MAT', 'ART']
SubjectCode: The type is TEXT, Which does not inlude Null and is Unique. Values format like: ['PHY 201', 'HIS 112', 'PHY 203']
SubjectName: The type is TEXT, Which does not inlude Null and is Unique. Values format like: ['U.S. History to 1877', 'American Government', 'Elementary Algebra']
SubjectPreReq: The type is TEXT, Which inlude Null and is Non-Unique. Values format like: ['ACC 220', 'MAT 098', 'ENG 101']
SubjectDescription: The type is TEXT, Which does not inlude Null and is Unique. Values format: <Long text>

#Forigen keys:
Class_Rooms.BuildingCode = Buildings.BuildingCode, Classes.ClassRoomID = Class_Rooms.ClassRoomID, Faculty_Categories.StaffID = Faculty.StaffID, Faculty_Categories.CategoryID = Categories.CategoryID, Faculty_Classes.ClassID = Classes.ClassID, Faculty_Subjects.StaffID = Faculty.StaffID, Student_Schedules.ClassStatus = Student_Class_Status.ClassStatus, Student_Schedules.ClassID = Classes.ClassID, Students.StudMajor = Majors.MajorID, Subjects.SubjectPreReq = Subjects.SubjectCode, Subjects.CategoryID = Categories.CategoryID

    Please conclude the database in the following format:
    #Database Description:
    #Tables Descriptions:
    

############################## AI at step generate_db_schema ##############################

#Database Description:
The `school_scheduling` database is designed to manage and organize information related to school operations, including buildings, classrooms, classes, faculty, students, subjects, and schedules. It provides a comprehensive structure for tracking relationships between entities such as faculty assignments, student schedules, class details, and subject prerequisites.

#Tables Descriptions:

## Buildings:
Contains information about school buildings, including their codes, names, number of floors, elevator access, and parking availability.

## Categories:
Stores categories of subjects, including unique category IDs, descriptions, and associated department IDs.

## Class_Rooms:
Tracks classroom details, including unique classroom IDs, associated building codes, and whether phones are available in the room.

## Classes:
Manages class details, including unique class IDs, associated subjects, classroom assignments, credits, start dates and times, durations, and weekly schedules.

## Departments:
Contains information about school departments, including unique department IDs, names, and department chairs.

## Faculty:
Stores faculty information, including unique staff IDs, titles, employment statuses, tenure status, and other details.

## Faculty_Categories:
Tracks the relationship between faculty members and subject categories, linking staff IDs to category IDs.

## Faculty_Classes:
Manages faculty assignments to classes, linking unique class IDs to staff IDs.

## Faculty_Subjects:
Tracks faculty proficiency in specific subjects, linking staff IDs to subject IDs and including a proficiency rating.

## Majors:
Contains information about academic majors, including unique major IDs and names.

## Staff:
Stores detailed information about staff members, including unique staff IDs, names, addresses, phone numbers, salaries, hire dates, and positions.

## Student_Class_Status:
Defines the status of a class for students, including unique class status IDs and descriptions (e.g., "Completed," "Enrolled," "Withdrew").

## Student_Schedules:
Tracks student schedules, linking student IDs to class IDs, class statuses, and grades.

## Students:
Contains detailed information about students, including unique student IDs, names, addresses, phone numbers, GPAs, and associated majors.

## Subjects:
Stores subject information, including unique subject IDs, category IDs, subject codes, names, prerequisites, and descriptions.

#Foreign Keys:
- `Class_Rooms.BuildingCode` = `Buildings.BuildingCode`
- `Classes.ClassRoomID` = `Class_Rooms.ClassRoomID`
- `Faculty_Categories.StaffID` = `Faculty.StaffID`
- `Faculty_Categories.CategoryID` = `Categories.CategoryID`
- `Faculty_Classes.ClassID` = `Classes.ClassID`
- `Faculty_Subjects.StaffID` = `Faculty.StaffID`
- `Student_Schedules.ClassStatus` = `Student_Class_Status.ClassStatus`
- `Student_Schedules.ClassID` = `Classes.ClassID`
- `Students.StudMajor` = `Majors.MajorID`
- `Subjects.SubjectPreReq` = `Subjects.SubjectCode`
- `Subjects.CategoryID` = `Categories.CategoryID`

############################## Human at step extract_col_value ##############################

/* Some extract examples are provided based on similar problems: */
/* Answer the following: Please give the name of the course in which most numbers of the students got an A. Also, list the full name of the students who got an A in this course. most number of students got an A refers MAX(COUNT(student_id WHERE grade = 'A')); full name = f_name, l_name; got an A refers to grade = 'A'; */
#reason: The question requires display in order: "name of the course", "full name"."A" is filtering condition.
#columns: course.name, student.f_name, student.l_name, registration.grade, registration.student_id
#values: "A"

/* Answer the following:How much more votes for episode 1 than for episode 5? more votes refers to SUBTRACT(SUM(votes when episode = 1), SUM(votes when episode = 5)) */
#reason: The question requires display in order: "How much more vote". The definition of "more vote" is SUBTRACT(SUM(votes when episode = 1), SUM(votes when episode = 5)). 1, 5 are filtering conditions.
#columns: Episode.episode, Vote.votes
#values: "1", "5"

/* Answer the following: What is the average score of the movie "The Fall of Berlin" in 2019? Average score refers to Avg(rating_score); */
#reason: The question requires display in order: "average score". Average score is Avg(rating_score), "The Fall of Berlin",2019 are filtering conditions.
#columns: ratings.rating_score, ratings.rating_id, ratings.rating_timestamp_utc, movies.movie_title
#values: "The Fall of Berlin", "2019"

/* Answer the following: How many distinct orders were there in 2003 when the quantity ordered was less than 30? "year(orderDate) = '2003'; quantityOrdered < 30;" */
#reason:  The question requires display in order: "How many distinct orders"." in 2003", "less than 30" are filtering conditions.
#columns: orderdetails.orderNumber, orderdetails.quantityOrdered, orders.orderDate
#values: "30", "2003"

/* Answer the following: Which director has made the single longest movie and what is that movie’s duration? */
SELECT d.director_id,
       d.name,
       m.title,
       m.duration
FROM directors AS d
JOIN movies AS m ON d.director_id = m.director_id
ORDER BY m.duration DESC
LIMIT 1;

/* Answer the following: List the three directors with the highest average movie rating (minimum five movies each). */
SELECT d.director_id,
       d.name,
       ROUND(AVG(m.rating),2) AS avg_rating,
       COUNT(*)              AS movie_count
FROM directors AS d
JOIN movies AS m ON d.director_id = m.director_id
GROUP BY d.director_id, d.name
HAVING COUNT(*) >= 5
ORDER BY avg_rating DESC
LIMIT 3;

/* Answer the following: How many movies did each director release in 2015?  Show directors who released at least one. */
SELECT d.director_id,
       d.name,
       COUNT(*) AS movies_2015
FROM directors AS d
JOIN movies AS m ON d.director_id = m.director_id
WHERE YEAR(m.release_date) = 2015
GROUP BY d.director_id, d.name;

/* Answer the following: Give the total number of votes received by all movies of “Steven Spielberg”. */
SELECT SUM(m.votes) AS total_votes
FROM movies AS m
JOIN directors AS d ON d.director_id = m.director_id
WHERE d.name = 'Steven Spielberg';

/* Answer the following: What is the average running time of movies released between 2000 and 2009 (inclusive)? */
SELECT ROUND(AVG(duration)) AS avg_runtime
FROM movies
WHERE YEAR(release_date) BETWEEN 2000 AND 2009;



/* Database schema */
Database Management System: SQLite
#Database name: school_scheduling
## Table Buildings:
BuildingCode: The type is TEXT, Which does not inlude Null and is Unique. Values format like: ['LB', 'IB', 'GYM']
BuildingName: The type is TEXT, Which does not inlude Null and is Unique. Values format like: ['Library', 'Arts and Sciences', 'Technology Building']
NumberOfFloors: The type is INTEGER, Which does not inlude Null and is Non-Unique. Values format like: [3, 1, 2]
ElevatorAccess: The type is BOOLEAN, Which does not inlude Null and is Non-Unique. Value of this column must in: [1, 0]
SiteParkingAvailable: The type is BOOLEAN, Which does not inlude Null and is Non-Unique. Value of this column must in: [1, 0]

## Table Categories:
CategoryID: The type is TEXT, Which does not inlude Null and is Unique. Values format like: ['ENG', 'MAT', 'ACC']
CategoryDescription: The type is TEXT, Which does not inlude Null and is Unique. Values format like: ['History', 'French', 'Art']
DepartmentID: The type is INTEGER, Which does not inlude Null and is Non-Unique. Values format like: [4, 3, 5]

## Table Class_Rooms:
ClassRoomID: The type is INTEGER, Which does not inlude Null and is Unique. Values format like: [3315, 1622, 3415]
BuildingCode: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: ['CC', 'TB', 'LB']
PhoneAvailable: The type is BOOLEAN, Which does not inlude Null and is Non-Unique. Value of this column must in: [1, 0]

## Table Classes:
ClassID: The type is INTEGER, Which does not inlude Null and is Unique. Values format like: [6031, 1560, 5639]
SubjectID: The type is INTEGER, Which does not inlude Null and is Non-Unique. Values format like: [56, 12, 1]
ClassRoomID: The type is INTEGER, Which does not inlude Null and is Non-Unique. Values format like: [1641, 1142, 3343]
Credits: The type is INTEGER, Which does not inlude Null and is Non-Unique. Values format like: [3, 5, 2]
StartDate: The type is DATE, Which does not inlude Null and is Non-Unique. Values format like: ['2017-09-16', '2018-01-20', '2018-01-15']
StartTime: The type is TIME, Which does not inlude Null and is Non-Unique. Values format like: ['12:00:00', '10:00:00', '18:00:00']
Duration: The type is INTEGER, Which does not inlude Null and is Non-Unique. Values format like: [140, 280, 110]
MondaySchedule: The type is BOOLEAN, Which does not inlude Null and is Non-Unique. Value of this column must in: [0, 1]
TuesdaySchedule: The type is BOOLEAN, Which does not inlude Null and is Non-Unique. Value of this column must in: [1, 0]
WednesdaySchedule: The type is BOOLEAN, Which does not inlude Null and is Non-Unique. Value of this column must in: [1, 0]
ThursdaySchedule: The type is BOOLEAN, Which does not inlude Null and is Non-Unique. Value of this column must in: [1, 0]
FridaySchedule: The type is BOOLEAN, Which does not inlude Null and is Non-Unique. Value of this column must in: [1, 0]
SaturdaySchedule: The type is BOOLEAN, Which does not inlude Null and is Non-Unique. Value of this column must in: [1, 0]

## Table Departments:
DepartmentID: The type is INTEGER, Which does not inlude Null and is Unique. Values format like: [2, 4, 5]
DeptName: The type is TEXT, Which does not inlude Null and is Unique. Values format like: ['Business Administration', 'Sciences', 'Social Sciences']
DeptChair: The type is INTEGER, Which does not inlude Null and is Unique. Values format like: [98007, 98005, 98059]

## Table Faculty:
StaffID: The type is INTEGER, Which does not inlude Null and is Unique. Values format like: [98013, 98019, 98052]
Title: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: ['Instructor', 'Associate Professor', 'Professor']
Status: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: ['Full Time', 'Part Time', 'On Leave']
Tenured: The type is BOOLEAN, Which does not inlude Null and is Non-Unique. Value of this column must in: [1, 0]

## Table Faculty_Categories:
StaffID: The type is INTEGER, Which does not inlude Null and is Non-Unique. Values format like: [98020, 98030, 98062]
CategoryID: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: ['POL', 'HIS', 'CIS']

## Table Faculty_Classes:
ClassID: The type is INTEGER, Which does not inlude Null and is Unique. Values format like: [1006, 6090, 1030]
StaffID: The type is INTEGER, Which does not inlude Null and is Non-Unique. Values format like: [98064, 98048, 98025]

## Table Faculty_Subjects:
StaffID: The type is INTEGER, Which does not inlude Null and is Non-Unique. Values format like: [98063, 98062, 98010]
SubjectID: The type is INTEGER, Which does not inlude Null and is Non-Unique. Values format like: [1, 39, 19]
ProficiencyRating: The type is REAL, Which does not inlude Null and is Non-Unique. Values format like: [10, 9, 8]

## Table Majors:
MajorID: The type is INTEGER, Which does not inlude Null and is Unique. Values format like: [2, 6, 1]
Major: The type is TEXT, Which does not inlude Null and is Unique. Values format like: ['Accounting', 'Information Sciences', 'Music']

## Table Staff:
StaffID: The type is INTEGER, Which does not inlude Null and is Unique. Values format like: [98014, 98042, 98020]
StfFirstName: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: ['Katherine', 'Maria', 'Jim']
StfLastname: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: ['Hernandez', 'Wilson', 'Sergienko']
StfStreetAddress: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: ['672 Lamont Ave', '16 Maple Lane', '15127 NE 24th, #383']
StfCity: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: ['Kirkland', 'Marysville', 'Bellevue']
StfState: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: ['WA', 'CA', 'TX']
StfZipCode: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: [97208, 90809, 98125]
StfAreaCode: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: [425, 503, 915]
StfPhoneNumber: The type is TEXT, Which does not inlude Null and is Unique. Values format like: ['555-2531', '555-2491', '555-2611']
Salary: The type is REAL, Which does not inlude Null and is Non-Unique. Values format like: [44000, 49000, 35000]
DateHired: The type is DATE, Which does not inlude Null and is Unique. Values format like: ['1983-01-28', '1986-09-17', '1990-08-20']
Position: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: ['Graduate Advisor', 'Registrar', 'Secretary']

## Table Student_Class_Status:
ClassStatus: The type is INTEGER, Which does not inlude Null and is Unique. Values format like: [1, 2, 3]
ClassStatusDescription: The type is TEXT, Which does not inlude Null and is Unique. Values format like: ['Completed', 'Enrolled', 'Withdrew']

## Table Student_Schedules:
StudentID: The type is INTEGER, Which does not inlude Null and is Non-Unique. Values format like: [1016, 1009, 1003]
ClassID: The type is INTEGER, Which does not inlude Null and is Non-Unique. Values format like: [1162, 5071, 3085]
ClassStatus: The type is INTEGER, Which does not inlude Null and is Non-Unique. Values format like: [2, 1, 3]
Grade: The type is REAL, Which does not inlude Null and is Non-Unique. Values format like: [88, 97, 82]

## Table Students:
StudentID: The type is INTEGER, Which does not inlude Null and is Unique. Values format like: [1011, 1009, 1007]
StudFirstName: The type is TEXT, Which does not inlude Null and is Unique. Values format like: ['Richard', 'John', 'George']
StudLastName: The type is TEXT, Which does not inlude Null and is Unique. Values format like: ['Bonnicksen', 'Hamilton', 'Chavez']
StudStreetAddress: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: ['611 Alpine Drive', 'Route 2, Box 203B', '66 Spring Valley Drive']
StudCity: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: ['Palm Springs', 'Portland', 'Medford']
StudState: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: ['OR', 'CA', 'WA']
StudZipCode: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: [97401, 97501, 78284]
StudAreaCode: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: [541, 806, 206]
StudPhoneNumber: The type is TEXT, Which does not inlude Null and is Unique. Values format like: ['555-2716', '555-2296', '555-2696']
StudGPA: The type is REAL, Which does not inlude Null and is Unique. Values format like: [85, 77, 72]
StudMajor: The type is INTEGER, Which inlude Null and is Non-Unique. Values format like: [3, 5, 6]

## Table Subjects:
SubjectID: The type is INTEGER, Which does not inlude Null and is Unique. Values format like: [18, 22, 39]
CategoryID: The type is TEXT, Which does not inlude Null and is Non-Unique. Values format like: ['BUS', 'MAT', 'ART']
SubjectCode: The type is TEXT, Which does not inlude Null and is Unique. Values format like: ['PHY 201', 'HIS 112', 'PHY 203']
SubjectName: The type is TEXT, Which does not inlude Null and is Unique. Values format like: ['U.S. History to 1877', 'American Government', 'Elementary Algebra']
SubjectPreReq: The type is TEXT, Which inlude Null and is Non-Unique. Values format like: ['ACC 220', 'MAT 098', 'ENG 101']
SubjectDescription: The type is TEXT, Which does not inlude Null and is Unique. Values format: <Long text>

#Forigen keys:
Class_Rooms.BuildingCode = Buildings.BuildingCode, Classes.ClassRoomID = Class_Rooms.ClassRoomID, Faculty_Categories.StaffID = Faculty.StaffID, Faculty_Categories.CategoryID = Categories.CategoryID, Faculty_Classes.ClassID = Classes.ClassID, Faculty_Subjects.StaffID = Faculty.StaffID, Student_Schedules.ClassStatus = Student_Class_Status.ClassStatus, Student_Schedules.ClassID = Classes.ClassID, Students.StudMajor = Majors.MajorID, Subjects.SubjectPreReq = Subjects.SubjectCode, Subjects.CategoryID = Categories.CategoryID

#Database Description:
The `school_scheduling` database is designed to manage and organize information related to school operations, including buildings, classrooms, classes, faculty, students, subjects, and schedules. It provides a comprehensive structure for tracking relationships between entities such as faculty assignments, student schedules, class details, and subject prerequisites.

#Tables Descriptions:

## Buildings:
Contains information about school buildings, including their codes, names, number of floors, elevator access, and parking availability.

## Categories:
Stores categories of subjects, including unique category IDs, descriptions, and associated department IDs.

## Class_Rooms:
Tracks classroom details, including unique classroom IDs, associated building codes, and whether phones are available in the room.

## Classes:
Manages class details, including unique class IDs, associated subjects, classroom assignments, credits, start dates and times, durations, and weekly schedules.

## Departments:
Contains information about school departments, including unique department IDs, names, and department chairs.

## Faculty:
Stores faculty information, including unique staff IDs, titles, employment statuses, tenure status, and other details.

## Faculty_Categories:
Tracks the relationship between faculty members and subject categories, linking staff IDs to category IDs.

## Faculty_Classes:
Manages faculty assignments to classes, linking unique class IDs to staff IDs.

## Faculty_Subjects:
Tracks faculty proficiency in specific subjects, linking staff IDs to subject IDs and including a proficiency rating.

## Majors:
Contains information about academic majors, including unique major IDs and names.

## Staff:
Stores detailed information about staff members, including unique staff IDs, names, addresses, phone numbers, salaries, hire dates, and positions.

## Student_Class_Status:
Defines the status of a class for students, including unique class status IDs and descriptions (e.g., "Completed," "Enrolled," "Withdrew").

## Student_Schedules:
Tracks student schedules, linking student IDs to class IDs, class statuses, and grades.

## Students:
Contains detailed information about students, including unique student IDs, names, addresses, phone numbers, GPAs, and associated majors.

## Subjects:
Stores subject information, including unique subject IDs, category IDs, subject codes, names, prerequisites, and descriptions.

#Foreign Keys:
- `Class_Rooms.BuildingCode` = `Buildings.BuildingCode`
- `Classes.ClassRoomID` = `Class_Rooms.ClassRoomID`
- `Faculty_Categories.StaffID` = `Faculty.StaffID`
- `Faculty_Categories.CategoryID` = `Categories.CategoryID`
- `Faculty_Classes.ClassID` = `Classes.ClassID`
- `Faculty_Subjects.StaffID` = `Faculty.StaffID`
- `Student_Schedules.ClassStatus` = `Student_Class_Status.ClassStatus`
- `Student_Schedules.ClassID` = `Classes.ClassID`
- `Students.StudMajor` = `Majors.MajorID`
- `Subjects.SubjectPreReq` = `Subjects.SubjectCode`
- `Subjects.CategoryID` = `Categories.CategoryID`


Attention:
1. if the question have when\where\which, pay attention to pick table.column related to time, location and name in #columns
2. Please answer the question in the following format without any other content:
```
#reason: Analysis of which columns and values might be relevant to the question. Note that when dealing with questions about time, who, which, what, etc., you should keep column related to time, names, and locations in the #column.(format: The question query xxx, the related column include table.column, the values include values)
#columns: The top 10 columns relevant to the question( format: table.column_1, table.column_2 ...)
#values: Potential filter values that the question might query(format: "value1", "value2" ...)
```
/* Answer the following: Could you provide a list of last names for all students who have completed English courses, including their quintile ranks based on their individual grades in those courses (without averaging), where the quintiles are determined by ranking students according to the number of students who have grades greater than or equal to theirs, and sorted from the highest to the lowest grade quintile? */


############################## AI at step extract_col_value ##############################

```
#reason: The question queries last names of students who completed English courses, their grades, and their quintile ranks. Relevant columns include student names, grades, course names, and class status. Filters include "Completed" and "English".
#columns: Students.StudLastName, Student_Schedules.Grade, Student_Schedules.ClassStatus, Subjects.SubjectName
#values: "Completed", "English"
```

############################## Human at step extract_query_noun ##############################

Please extract all nouns and phrases from the following sentence, separating the results directly with a comma( format: "noun_1", "noun_2","phrases" ):
Could you provide a list of last names for all students who have completed English courses, including their quintile ranks based on their individual grades in those courses (without averaging), where the quintiles are determined by ranking students according to the number of students who have grades greater than or equal to theirs, and sorted from the highest to the lowest grade quintile?

############################## AI at step extract_query_noun ##############################

"list", "last names", "students", "English courses", "quintile ranks", "individual grades", "courses", "quintiles", "students", "grades", "grade quintile"

############################## Human at step column_retrieve_and_other_info ##############################

现在我们定义一个问句的语法原子单元如下:
Q: 询问词: 如 calculate\ Include\ List\ List out\ List all\ give\ state\ Name\ In which\ How many\  which\ what\ who\ when\ provide\ Tally\ identify\ Find\ mention\ write等
J: 判断词： 如 Do\ Did\ If\ Is\ Are等
I: 查询内容: 查询的主体内容, 如: name, ID, date, location, item, biggest city.
C: 条件句: 通过介词和连词引入的查询的要求或属性, 如大于、等于、排序、聚合等. 介词和连词有: of\ have\ with\ that\ by. 条件句的形式例子有: with condition\ have condition\ of attribute\ that was condition


一个问题通过这些原子串联起来。常见的串联方式有
QIC(询问句): List the student with score more than 80: Q: 'List' I: 'the student' C: 'with score more than 80'
JC(判断句): State if Tom is a Cat? : J: 'State if C: is a Cat?'
C(条件句): For all people in Beijing
现在请你针对下面的问题, 把问题中的内容按照上述原子定义提取出来
问题如下: Could you provide a list of last names for all students who have completed English courses, including their quintile ranks based on their individual grades in those courses (without averaging), where the quintiles are determined by ranking students according to the number of students who have grades greater than or equal to theirs, and sorted from the highest to the lowest grade quintile?

请按照下面的json格式进行回答:

```json
[{"Type":"类型(QIC,JC,C)",
"Extract":{//不存在的填null
    "Q":"询问词",
    "J":"判断词",
    "I":['查询内容a', '查询内容b'],//只有查询内容用and或alongside连接时,才分成多个实体填入List
    "C":["条件句a","属性b"]
}},
{}]
```

############################## AI at step column_retrieve_and_other_info ##############################

```json
[
  {
    "Type": "QIC",
    "Extract": {
      "Q": "provide a list",
      "J": null,
      "I": ["last names for all students", "quintile ranks based on their individual grades in those courses"],
      "C": [
        "who have completed English courses",
        "where the quintiles are determined by ranking students according to the number of students who have grades greater than or equal to theirs",
        "sorted from the highest to the lowest grade quintile"
      ]
    }
  }
]
```

