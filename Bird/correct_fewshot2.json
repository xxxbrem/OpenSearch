{
    "Result: None": "/* Fix the SQL and answer the question */\n#question: Which product received a review from Indianapolis on 2016/10/7? \ndefine: Indianapolis refers to state = 'Indianapolis'; on 2016/10/7 refers to Date = '2016-10-07';\n#Error SQL: SELECT T1.Product FROM Products AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.city = 'Indianapolis' AND T1.Time = '2016-10-07'\nError: Result: None\n#values: \nProducts.Time='2016-10-07': reviews.Date='2016-10-07'\ndistrict.city='Indianapolis'\n#Change Ambiguity: Products.Time ='2016-10-07': reviews.Date ='2016-10-07'\n#SQL: SELECT T1.Product FROM reviews AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.city = 'Indianapolis' AND T1.Date = '2016-10-07'\n \n/* Fix the SQL and answer the question */\n#question: How many users in Mubi give the movie \"White Night Wedding for 5\"?\ndefine: White Night Wedding' is movie_title; for 5 refers to rating_score = 5;\n#Error SQL: SELECT COUNT(T1.user_id) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.rating_score = 5 AND T2.movie_title = 'White Night Wedding'\nError: Result: None\n#values: movies.movie_title = 'White-Night Wedding.'\n#Change Ambiguity: Substitute 'White-Night Wedding' with the actual value 'White-Night Wedding.' from the database.\n#SQL: SELECT COUNT(T1.user_id) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.rating_score = 5 AND T2.movie_title = 'White-Night Wedding.'\n\n/* Fix the SQL and answer the question */\n#question: What are the titles of the top 3 episodes that received no less than 30 votes in its 10-star rating?\ndefine: no less than 30 votes refers to votes > = 30; 10-star rating refers to stars = 10\n#Error SQL: SELECT T2.title FROM Vote AS T1 INNER JOIN Episode AS T2 ON T2.episode_id = T1.episode_id WHERE T2.votes >= 30 AND T1.stars = 10 ORDER BY T1.votes DESC LIMIT 3\nError: Result: None\n#columns: \nVote.stars, Vote.votes, Episode.title, Episode.votes\n#Change Ambiguity: Episode.votes: Vote.votes\n#SQL: SELECT T2.title FROM Vote AS T1 INNER JOIN Episode AS T2 ON T2.episode_id = T1.episode_id WHERE T1.votes >= 30 AND T1.stars = 10 ORDER BY T1.votes DESC LIMIT 3\n \n/* Fix the SQL and answer the question */\n#question: List the names of all the cast members in the series.\ndefine: cast member refers to category = 'Cast'\n#Error SQL: SELECT T2.name FROM Member AS T1 INNER JOIN Person AS T2 ON T2.person_id = T1.person_id WHERE T1.category = 'Cast'\nError: Result: None\n#columns:\nCredit.category, Person.name, Member.category\n#values:\nMember.category = 'Cast': Credit.category= 'Cast'\n#Change Ambiguity: Member.category = 'Cast': Credit.category= 'Cast'\n#SQL: SELECT T2.name FROM Credit AS T1 INNER JOIN Person AS T2 ON T2.person_id = T1.person_id WHERE T1.category = 'Cast'\n\n/* Fix the SQL and answer the question */\n#question: Which country produced the highest number of cars? the highest number of cars refers to max(country); \"\n#Error SQL:  SELECT T2.country FROM production AS T1 INNER JOIN country AS T2 ON T1.country = T2.origin WHERE T1.cars= (SELECT MAX(cars) From production)\nError: Result: None\n#Change Ambiguity: (SELECT MAX(cars) From production): GROUP BY T2.country ORDER BY T1.cars DES LIMIT 1\n#SQL: SELECT T2.country FROM production AS T1 INNER JOIN country AS T2 ON T1.country = T2.origin GROUP BY T2.country ORDER BY T1.cars DESC LIMIT 1",
    "no such column": "/* Fix the SQL and answer the question */\n#question: What is the detailed product of the complaint filed by Diesel Galloway on 2014/7/3? \ndefine: detailed product refers to \"sub-product\"; on 2014/7/3 refers to \"Date received\" = '2014-07-03';\n#Error SQL:\tSELECT T2.Sub-product FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.first = 'Diesel' AND T1.last = 'Galloway' AND T2.Date received = '2014-07-03'\nError: no such column: T2.Sub\n#SQL: SELECT T2.`Sub-product` FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.first = 'Diesel' AND T1.last = 'Galloway' AND T2.`Date received` = '2014-07-03'\n\n/* Fix the SQL and answer the question */\n#question: Which product received a review from Indianapolis on 2016/10/7? \ndefine: Indianapolis refers to state = 'Indianapolis'; on 2016/10/7 refers to Date = '2016-10-07';\n#Error SQL: SELECT T1.Product FROM Products AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.city = 'Indianapolis' AND T1.Time = '2016-10-07'\nError: no such column: T1.Product\n#SQL: SELECT T1.Product FROM reviews AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.city = 'Indianapolis' AND T1.Date = '2016-10-07'\n\n/* Fix the SQL and answer the question */\n#question: For how long did the complaint filed on 2017/3/27 by Rachel Hicks last?\ndefine: how long did the complaint filed last refers to ser_time; on 2017/3/27 refers to \"Date received\" = '2017-03-27';\"\n#values: \nclient.`Date received` = '2017-03-27', callcenterlogs.`Date received` = '2017-03-27'\n\n#Error SQL: SELECT T2.ser_time FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T1.first = 'Rachel' AND T1.last = 'Hicks' AND `Date received` = '2017-03-27'\n#columns:\ncallcenterlogs.ser_time, client.first, client.last, callcenterlogs.`Date received`\nError: no such column: Date received\n#SQL: SELECT T2.ser_time FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T1.first = 'Rachel' AND T1.last = 'Hicks' AND T2.`Date received` = '2017-03-27'\n\n/* Fix the SQL and answer the question */\n#question: What is the number of the credit card that Frank-Paul Santangelo used to purchase root beers on 2014/7/7?\ndefine: number of the credit card refers to CreditCardNumber; on 2014/7/7 refers to TransactionDate = '2014-07-07';\n#Error SQL: SELECT DISTINCT T2.CreditCardNumber FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.First_name = 'Frank-Paul' AND T1.Last_name = 'Santangelo' AND T2.TransactionDate = '2014-07-07'\nError: no such column: T1.First_name\n#SQL: SELECT DISTINCT T2.CreditCardNumber FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.First = 'Frank-Paul' AND T1.Last = 'Santangelo' AND T2.TransactionDate = '2014-07-07'\n",
    "You can only execute one statement at a time": "/* Fix the SQL and answer the question */\n#question: List ther users who gave the worst rating for movie 'Love Will Tear Us Apart'.\ndefine: worst rating refers to rating_score = 1;\n#Error SQL: SELECT T1.user_id FROM ratings AS T1 WHERE T1.rating_score = 1; SELECT T2.movie_title FROM movies AS T2 WHERE T2.movie_title = 'Love Will Tear Us Apart'\nError: You can only execute one statement at a time\n#SQL: \"SELECT T1.user_id FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'Love Will Tear Us Apart' AND T1.rating_score = 1\n\n/* Fix the SQL and answer the question */\n#question: Which order have the highest unit cost?\ndefine: order have the highest unit cost refers to OrderNumber where MAX(Unit Cost);\n#Error SQL: SELECT OrderNumber FROM `Sales Orders` WHERE REPLACE(`Unit Cost`, ',', '') = ( SELECT REPLACE(`Unit Cost`, ',', '') FROM `Sales Orders` ORDER BY REPLACE(`Unit Cost`, ',', '') DESC LIMIT 1 ); SELECT MAX(REPLACE(`Unit Cost`, ',', '')) FROM `Sales Orders`\nError: You can only execute one statement at a time\n#SQL: SELECT OrderNumber FROM `Sales Orders` WHERE REPLACE(`Unit Cost`, ',', '') = ( SELECT REPLACE(`Unit Cost`, ',', '') FROM `Sales Orders` ORDER BY REPLACE(`Unit Cost`, ',', '') DESC LIMIT 1 )\n",
    "syntax error": "\n/* Fix the SQL and answer the question */\n#question: How many gold medals were given to the winners in the Ice Hockey Men's Ice Hockey event?\ndefine: Ice Hockey Men's Ice Hockey refers to event_name = 'Ice Hockey Men''s Ice Hockey';\n#Error SQL: SELECT COUNT(T2.competitor_id) FROM event AS T1 INNER JOIN competitor_event AS T2 ON T1.id = T2.event_id WHERE T1.event_name LIKE 'Ice Hockey Men's Ice Hockey' AND T2.medal_id = 1\nError: near \"s\": syntax error\n#SQL: SELECT COUNT(T2.competitor_id) FROM event AS T1 INNER JOIN competitor_event AS T2 ON T1.id = T2.event_id WHERE T1.event_name LIKE 'Ice Hockey Men''s Ice Hockey' AND T2.medal_id = 1\n\n/* Fix the SQL and answer the question */\n#question: Among the transactions made in July, 2014, how many of them were made by a male customer?\ndefine: in July, 2014 refers to SUBSTR(TransactionDate, 1, 4) = '2014' AND SUBSTR(TransactionDate, 6, 2) = '07'; male customer refers to Gender = 'M'\n#Error SQL: SELECT COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Gender = 'M' AND STRFTIME('%Y-%m', T2.TransactionDate)  AS YEAR = '2014-07'\"\nError: near \"AS\": syntax error\n#SQL: SELECT COUNT(T2.competitor_id) FROM event AS T1 INNER JOIN competitor_event AS T2 ON T1.id = T2.event_id WHERE T1.event_name LIKE 'Ice Hockey Men''s Ice Hockey' AND T2.medal_id = 1\n\n/* Fix the SQL and answer the question */\n#question: Please list the donation messages of the donations for the projects created by a teacher working in a public magnet school in L'Brooklyn.\ndefine: public magnet refers to school_magnet = 't';\n#Error SQL: SELECT donation_message FROM projects WHERE school_city = 'L'Brooklyn' AND school_magnet = 't'\nerror: near \"Brooklyn\": syntax error\n#SQL: SELECT T2.donation_message FROM projects AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.school_city = 'L''Brooklyn' AND T1.school_magnet = 't'\n\n",
    "misuse of aggregate function": "\n",
    "unrecognized token": "\n/* Fix the SQL and answer the question */\n#question: Provide the air carrier description of the flight with a tail number N922US from Phoenix.\ndefine: tail number refers to TAIL_NUM; TAIL_NUM = 'N922US'; from Phoenix refers to ORIGIN = 'PHX'\n#Error SQL: SELECT T2.Description FROM Airlines AS T1 INNER JOIN `Air Carriers` AS T2 ON T2.Code = T1.OP_CARRIER_AIRLINE_ID WHERE T1.TAIL_NUM = 'N922US' AND T1.ORIGIN = 'PHX' GROUP BY T2.Description ## Desc\nError: unrecognized token: #\n#SQL: SELECT T2.Description FROM Airlines AS T1 INNER JOIN `Air Carriers` AS T2 ON T2.Code = T1.OP_CARRIER_AIRLINE_ID WHERE T1.TAIL_NUM = 'N922US' AND T1.ORIGIN = 'PHX' GROUP BY T2.Description\n",
    "no such function": "\n/* Fix the SQL and answer the question */\n#question: What is the ratio of disable female to male students?\ndefine: ratio refers to DIVIDE(COUNT(name not from male), COUNT(name from male))\n#Error SQL: SELECT CAST(SUM(IF(T2.name IS NULL, 1, 0)) AS REAL) * 100 / COUNT(T2.name) FROM disabled AS T1 LEFT JOIN male AS T2 ON T1.`name` = T2.`name`\nError: no such function: IF\n#SQL: SELECT CAST(SUM(IIF(T2.name IS NULL, 1, 0)) AS REAL) * 100 / COUNT(T2.name) FROM disabled AS T1 LEFT JOIN male AS T2 ON T1.`name` = T2.`name`\n\n/* Fix the SQL and answer the question */\n#question: Among the menus that did not support taking out or booking in advance, how many of them were created before 1950? \ndefine: did not support taking out or booking in advance refers to call_number is null; created before 1950 refers to strftime('%Y', date) < '1950';\n#Error SQL: SELECT COUNT(*) FROM Menu WHERE strftime('%Y', date) < '1950'\nerror: no such function: srftime\n#SQL: SELECT COUNT(*) FROM Menu WHERE call_number IS NULL AND strftime('%Y', date) < '1950'\n\n/* Fix the SQL and answer the question */\n#question: Among all the current legislators born after the year 1960, how many of them are not google entities?\ndefine: born after the year 1960 refers to strftime('%Y', birthday_bio) > '1960'; not google entities refers to google_entity_id_id is null;\n#Error SQL: SELECT COUNT(*) FROM current WHERE YEAR(birthday_bio) > 1960 AND google_entity_id_id IS NULL\nError: no such function: YEAR\n#SQL: SELECT COUNT(*) FROM current WHERE strftime('%Y', birthday_bio) > '1960' AND google_entity_id_id IS NULL\n",
    "ambiguous column name": "\n/* Fix the SQL and answer the question */\n#question: Please list the names of all the Olympic competitors from Finland.\ndefine: names of competitors refer to full_name; from Finland refers to region_name = 'Finland';\n#Error SQL: SELECT full_name FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id WHERE T1.region_name = 'Finland'\nError: ambiguous column name: full_name\n#columns:\nnoc_region.region_name, person_region.region_id, person.full_name\n#SQL: SELECT full_name FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.region_name = 'Finland'\n\n/* Fix the SQL and answer the question */\n#question: What are the sales reasons for order 43718?\ndefine: order refers to SalesOrderID\n#Error SQL: SELECT T2.Name FROM SalesOrderHeaderSalesReason AS T1 INNER JOIN SalesReason AS T2 ON T1.SalesReasonID = T2.SalesReasonID WHERE SalesOrderID = 43718\nError: ambiguous column name: SalesOrderID\n#columns:\nSalesReason.Name, SalesOrderHeaderSalesReason.SalesOrderID\nperson_region.region_name, person_region.region_id, person.full_name\n#SQL: SELECT T2.Name FROM SalesOrderHeaderSalesReason AS T1 INNER JOIN SalesReason AS T2 ON T1.SalesReasonID = T2.SalesReasonID WHERE T1.SalesOrderID = 43718\n",
    "default": "/* Fix the SQL and answer the question */\n#question: List ther users who gave the worst rating for movie 'Love Will Tear Us Apart'.\ndefine: worst rating refers to rating_score = 1;\n#Error SQL: SELECT T1.user_id FROM ratings AS T1 WHERE T1.rating_score = 1; SELECT T2.movie_title FROM movies AS T2 WHERE T2.movie_title = 'Love Will Tear Us Apart'\nError: You can only execute one statement at a time\n#SQL: \"SELECT T1.user_id FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'Love Will Tear Us Apart' AND T1.rating_score = 1\n\n/* Fix the SQL and answer the question */\n#question: Which order have the highest unit cost?\ndefine: order have the highest unit cost refers to OrderNumber where MAX(Unit Cost);\n#Error SQL: SELECT OrderNumber FROM `Sales Orders` WHERE REPLACE(`Unit Cost`, ',', '') = ( SELECT REPLACE(`Unit Cost`, ',', '') FROM `Sales Orders` ORDER BY REPLACE(`Unit Cost`, ',', '') DESC LIMIT 1 ); SELECT MAX(REPLACE(`Unit Cost`, ',', '')) FROM `Sales Orders`\nError: You can only execute one statement at a time\n#SQL: SELECT OrderNumber FROM `Sales Orders` WHERE REPLACE(`Unit Cost`, ',', '') = ( SELECT REPLACE(`Unit Cost`, ',', '') FROM `Sales Orders` ORDER BY REPLACE(`Unit Cost`, ',', '') DESC LIMIT 1 )\n\n/* Fix the SQL and answer the question */\n#question: Which product received a review from Indianapolis on 2016/10/7? \ndefine: Indianapolis refers to state = 'Indianapolis'; on 2016/10/7 refers to Date = '2013-04-04';\n#Error SQL: SELECT T1.Product FROM Products AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.city = 'Indianapolis' AND T1.Time = '2016-10-07'\nError: Result: None\n# candidate values: \nProducts.Time='2016-10-07', reviews.Date='2016-10-07'\ndistrict.city='Indianapolis',\n#SQL: SELECT T1.Product FROM reviews AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.city = 'Indianapolis' AND T1.Date = '2016-10-07'\n\n/* Fix the SQL and answer the question */\n#question: Which product received a review from Indianapolis on 2016/10/7? \ndefine: Indianapolis refers to state = 'Indianapolis'; on 2016/10/7 refers to Date = '2013-04-04';\n#Error SQL: SELECT T1.Product FROM Products AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.city = 'Indianapolis' AND T1.Time = '2016-10-07'\nError: no such column: T1.Product\n#SQL: SELECT T1.Product FROM reviews AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.city = 'Indianapolis' AND T1.Date = '2016-10-07'\n\n/* Fix the SQL and answer the question */\n#question: How many gold medals were given to the winners in the Ice Hockey Men's Ice Hockey event?\ndefine: Ice Hockey Men's Ice Hockey refers to event_name = 'Ice Hockey Men''s Ice Hockey';\n#Error SQL: SELECT COUNT(T2.competitor_id) FROM event AS T1 INNER JOIN competitor_event AS T2 ON T1.id = T2.event_id WHERE T1.event_name LIKE 'Ice Hockey Men's Ice Hockey' AND T2.medal_id = 1\nError: near \"s\": syntax error\n#SQL: SELECT COUNT(T2.competitor_id) FROM event AS T1 INNER JOIN competitor_event AS T2 ON T1.id = T2.event_id WHERE T1.event_name LIKE 'Ice Hockey Men''s Ice Hockey' AND T2.medal_id = 1\n\n/* Fix the SQL and answer the question */\n#question: What are the sales reasons for order 43718?\ndefine: order refers to SalesOrderID\n#Error SQL: SELECT T2.Name FROM SalesOrderHeaderSalesReason AS T1 INNER JOIN SalesReason AS T2 ON T1.SalesReasonID = T2.SalesReasonID WHERE SalesOrderID = 43718\nError: ambiguous column name: SalesOrderID\n#columns:\nSalesReason.Name, SalesOrderHeaderSalesReason.SalesOrderID\nperson_region.region_name, person_region.region_id, person.full_name\n#SQL: SELECT T2.Name FROM SalesOrderHeaderSalesReason AS T1 INNER JOIN SalesReason AS T2 ON T1.SalesReasonID = T2.SalesReasonID WHERE T1.SalesOrderID = 43718"
}